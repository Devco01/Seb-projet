// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modèle pour les clients
model Client {
  id          Int       @id @default(autoincrement())
  nom         String
  email       String    @unique
  telephone   String?
  adresse     String
  codePostal  String
  ville       String
  pays        String    @default("France")
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  devis       Devis[]
  factures    Facture[]
}

// Modèle pour les devis
model Devis {
  id          Int       @id @default(autoincrement())
  numero      String    @unique
  date        DateTime
  validite    DateTime
  statut      String    @default("En attente") // En attente, Accepté, Refusé, Expiré
  clientId    Int
  client      Client    @relation(fields: [clientId], references: [id])
  montantHT   Float
  montantTVA  Float
  montantTTC  Float
  conditions  String?
  notes       String?
  lines       Json      // Tableau des lignes de devis (produits/services)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  factures    Facture[]
}

// Modèle pour les factures
model Facture {
  id          Int        @id @default(autoincrement())
  numero      String     @unique
  date        DateTime
  echeance    DateTime
  statut      String     @default("En attente") // En attente, Payée, Partiellement payée, En retard
  clientId    Int
  client      Client     @relation(fields: [clientId], references: [id])
  devisId     Int?
  devis       Devis?     @relation(fields: [devisId], references: [id])
  montantHT   Float
  montantTVA  Float
  montantTTC  Float
  conditions  String?
  notes       String?
  lines       Json      // Tableau des lignes de facture (produits/services)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  paiements   Paiement[]
}

// Modèle pour les paiements
model Paiement {
  id          Int       @id @default(autoincrement())
  factureId   Int
  facture     Facture   @relation(fields: [factureId], references: [id])
  date        DateTime
  montant     Float
  methode     String    // Virement, Chèque, Espèces, Carte bancaire
  reference   String?   // Référence du paiement (numéro de chèque, etc.)
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Modèle pour les paramètres de l'entreprise
model Parametres {
  id                Int      @id @default(autoincrement())
  nomEntreprise     String
  adresse           String
  codePostal        String
  ville             String
  pays              String   @default("France")
  telephone         String?
  email             String?
  siteWeb           String?
  siret             String?
  tvaIntracommunautaire String?
  logo              String?  // Chemin vers le logo
  couleurPrincipale String?  // Code couleur principal
  tauxTVA           Float    @default(20)
  deviseSymbole     String   @default("€")
  conditionsPaiement String?
  piedPage          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
