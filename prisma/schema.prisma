generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id         Int        @id @default(autoincrement())
  nom        String
  contact    String?
  email      String
  telephone  String?
  adresse    String
  codePostal String
  ville      String
  pays       String     @default("France")
  siret      String?
  tva        String?
  notes      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  devis      Devis[]
  factures   Facture[]
  paiements  Paiement[]
}

model Devis {
  id         Int       @id @default(autoincrement())
  numero     String    @unique
  clientId   Int
  date       DateTime
  validite   DateTime
  statut     String    @default("En attente")
  lignes     String
  conditions String?
  notes      String?
  totalHT    Float
  totalTTC   Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  client     Client    @relation(fields: [clientId], references: [id])
  factures   Facture[]
}

model Facture {
  id                 Int        @id @default(autoincrement())
  numero             String     @unique
  clientId           Int
  devisId            Int?
  date               DateTime
  echeance           DateTime
  statut             String     @default("En attente")
  lignes             String
  conditions         String?
  notes              String?
  totalHT            Float
  totalTTC           Float
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  estAcompte         Boolean    @default(false)
  factureFinaleId    Int?
  pourcentageAcompte Float?
  client             Client     @relation(fields: [clientId], references: [id])
  devis              Devis?     @relation(fields: [devisId], references: [id])
  Facture            Facture?   @relation("FactureToFacture", fields: [factureFinaleId], references: [id])
  other_Facture      Facture[]  @relation("FactureToFacture")
  paiements          Paiement[]
}

model Paiement {
  id                   Int      @id @default(autoincrement())
  reference            String   @unique
  factureId            Int
  clientId             Int
  date                 DateTime
  montant              Float
  methode              String
  referenceTransaction String?
  statut               String   @default("En attente")
  notes                String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  client               Client   @relation(fields: [clientId], references: [id])
  facture              Facture  @relation(fields: [factureId], references: [id])
}

model Parametres {
  id                     Int      @id @default(autoincrement())
  email                  String
  siret                  String?
  prefixeDevis           String   @default("D-")
  prefixeFacture         String   @default("F-")
  conditionsPaiement     String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  address                String
  city                   String
  companyName            String
  logoUrl                String?
  mentionsLegalesDevis   String?
  mentionsLegalesFacture String?
  paymentDelay           Int      @default(30)
  phone                  String?
  zipCode                String
}
